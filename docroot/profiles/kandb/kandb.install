<?php

/**
 * @file
 * Install, update and uninstall functions for kandb.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function kandb_install() {
  // Enable default theme.
  $theme = 'kandb_theme';
  theme_enable(array($theme));
  variable_set('theme_default', $theme);

  // Enable admin theme.
  $admin_theme = 'adminimal';
  theme_enable(array($admin_theme));
  variable_set('admin_theme', $admin_theme);

  // Use admin theme when editing nodes.
  variable_set('node_admin_theme', '1');

  // Disable bartik and seven.
  theme_disable(array('bartik', 'seven', 'ember'));
}

/**
 * Implements hook_install_tasks_alter().
 */
function kandb_install_tasks_alter(&$tasks, $install_state) {
  global $install_state;

  // Skip language selection install step and default language to English.
  $tasks['install_select_locale']['display'] = FALSE;
  $tasks['install_select_locale']['run'] = INSTALL_TASK_SKIP;
  $install_state['parameters']['locale'] = 'fr';

  // Override "install_finished" task.
  $tasks['install_finished']['function'] = 'kandb_install_finished';
}

/**
 * Override of install_finished().
 */
function kandb_install_finished(&$install_state) {
  // Flush all caches to ensure that any full bootstraps during the installer
  // do not leave stale cached data, and that any content types or other items
  // registered by the installation profile are registered correctly.
  drupal_flush_all_caches();

  // Remember the profile which was used.
  variable_set('install_profile', drupal_get_profile());

  // Installation profiles are always loaded last
  db_update('system')
      ->fields(array('weight' => 1000))
      ->condition('type', 'module')
      ->condition('name', drupal_get_profile())
      ->execute();

  // Cache a fully-built schema.
  drupal_get_schema(NULL, TRUE);

  // Run cron to populate update status tables (if available) so that users
  // will be warned if they've installed an out of date Drupal version.
  // Will also trigger indexing of profile-supplied content or feeds.
  drupal_cron_run();

  // Clear & rebuild Features key caches.
  features_get_info(NULL, NULL, TRUE);
  features_rebuild();

  // Revert all Features (cleanup install).
  features_revert();

  // Remove install messages.
  $messages = array('completed', 'status', 'warning', 'error');
  foreach ($messages as $message) {
    drupal_get_messages($message, TRUE);
  }

  // Finish installation.
  if (!drupal_is_cli()) {
    // Redirect UI-based install to the site homepage.
    drupal_goto(variable_get('site_frontpage', ''));
  }
  else {
    // Display a success message for Drush-based install.
    drupal_set_message("Kaufman & Broad install complete.");
  }
}

/**
 * Enable features:
 *  + "K&B Context"
 *  + "K&B Views"
 */
function kandb_install_update_7100(&$sandbox) {
  if (!module_exists('kandb_context')) {
    module_enable(array('kandb_context'), TRUE);
  }

  if (!module_exists('kandb_views')) {
    module_enable(array('kandb_views'), TRUE);
  }
}

/**
 * Enable modules:
 *  + "Views"
 *  + "Views UI"
 */
function kandb_install_update_7101(&$sandbox) {
  if (!module_exists('views')) {
    module_enable(array('views'), TRUE);
  }

  if (!module_exists('views_ui')) {
    module_enable(array('views_ui'), TRUE);
  }

  if (!module_exists('ds_ui')) {
    module_enable(array('ds_ui'), TRUE);
  }
}

/**
 * Enable "Kandb dossier" feature
 */
function kandb_update_7102(&$sandbox) {
  if (!module_exists('kandb_dossier')) {
    module_enable(array('kandb_dossier'), TRUE);
  }
}

/**
 * Enable "kandb Dashboard B2c" feature
 */
function kandb_update_7103(&$sandbox) {
  if (!module_exists('kandb_dashboard_b2c')) {
    module_enable(array('kandb_dashboard_b2c'), TRUE);
  }
}

/**
 * Enable "Kandb maison" feature
 */
function kandb_update_7105(&$sandbox) {
  if (!module_exists('kandb_maison')) {
    module_enable(array('kandb_maison'), TRUE);
  }
}

/**
 * Enable "Kandb recherche" feature
 */
function kandb_update_7106(&$sandbox) {
  if (!module_exists('kandb_recherche')) {
    module_enable(array('kandb_recherche'), TRUE);
  }
}

/**
 * Enable "module webform" feature
 */
function kandb_update_7107(&$sandbox) {
  if (!module_exists('webform')) {
    module_enable(array('webform'), TRUE);
  }
}

/**
 * Enable "Kandb" feature
 */
function kandb_update_7108(&$sandbox) {
  if (!module_exists('kandb_webform')) {
    module_enable(array('kandb_webform'), TRUE);
  }
}

/**
 * Enable "module youtube" feature
 */
function kandb_update_7109(&$sandbox) {
  if (!module_exists('youtube')) {
    module_enable(array('youtube'), TRUE);
  }
}

/**
 * Enable "Kandb article" feature
 */
function kandb_update_7110(&$sandbox) {
  if (!module_exists('kandb_article')) {
    module_enable(array('kandb_article'), TRUE);
  }
}

/**
 * Enable "module bean" feature
 */
function kandb_update_7111(&$sandbox) {
  if (!module_exists('bean')) {
    module_enable(array('bean'), TRUE);
  }
}

/**
 * Enable "Kandb bean" feature
 */
function kandb_update_7112(&$sandbox) {
  if (!module_exists('kandb_bean')) {
    module_enable(array('kandb_bean'), TRUE);
  }
}

/**
 * Enable "module bean uuid" feature
 */
function kandb_update_7113(&$sandbox) {
  if (!module_exists('bean_uuid')) {
    module_enable(array('bean_uuid'), TRUE);
  }
}

/**
 * Enable "Kandb homepage" feature
 */
function kandb_update_7114(&$sandbox) {
  if (!module_exists('kandb_homepage')) {
    module_enable(array('kandb_homepage'), TRUE);
  }
}

/**
 * Enable "Feature K&B Dossier Views" feature
 */
function kandb_update_7115(&$sandbox) {
  if (!module_exists('kandb_dossier_views')) {
    module_enable(array('kandb_dossier_views'), TRUE);
  }
}

/**
 * Disable "Feature kandb tmp content" feature after the installation profile
 */
function kandb_update_7116(&$sandbox) {
  if (module_exists('kandb_tmp_content')) {
    module_disable(array('kandb_tmp_content'), TRUE);
    drupal_uninstall_modules(array('kandb_tmp_content'));
  }
}

/**
 * Enable "Feature kandb dossier menu views" feature
 */
function kandb_update_7117(&$sandbox) {
  if (!module_exists('kandb_dossier_menu_views')) {
    module_enable(array('kandb_dossier_menu_views'), TRUE);
  }
}

/**
 * Enable "Feature kandb promotion" feature
 */
function kandb_update_7118(&$sandbox) {
  if (!module_exists('kandb_promotion')) {
    module_enable(array('kandb_promotion'), TRUE);
  }
}

/**
 * Enable "image_style_quality" module
 */
function kandb_update_7119(&$sandbox) {
  if (!module_exists('image_style_quality')) {
    module_enable(array('image_style_quality'), TRUE);
  }
}

/**
 * Enable "kandb_image_style" feature
 */
function kandb_update_7120(&$sandbox) {
  if (!module_exists('kandb_image_style')) {
    module_enable(array('kandb_image_style'), TRUE);
  }
}

/**
 * Enable "kandb_business_rules" custom module
 */
function kandb_update_7121(&$sandbox) {
  if (!module_exists('kandb_business_rules')) {
    module_enable(array('kandb_business_rules'), TRUE);
  }
}

/**
 * Enable "kandb_habiteo" feature
 */
function kandb_update_7122(&$sandbox) {
  if (!module_exists('kandb_habiteo')) {
    module_enable(array('kandb_habiteo'), TRUE);
  }
}

/**
 * Enable "kandb_doclib_feature" feature
 */
function kandb_update_7123(&$sandbox) {
  if (!module_exists('kandb_doclib_feature')) {
    module_enable(array('kandb_doclib_feature'), TRUE);
  }
}

/**
 * Enable Webform Ajax module
 */
function kandb_update_7124() {
  if (!module_exists('webform_ajax')) {
    module_enable(array('webform_ajax'), TRUE);
  }
}

/**
 * Enable Webform domain_views module
 */
function kandb_update_7125() {
  if (!module_exists('domain_views')) {
    module_enable(array('domain_views'), TRUE);
  }
}

/**
 * Enable "Feature K&B Contact-us Export Views" feature
 */
function kandb_update_7126() {
  if (!module_exists('kand_contactus_export_views')) {
    module_enable(array('kand_contactus_export_views'), TRUE);
  }
}

/**
 * Enable "Set alias for article in dossier" Module
 */
function kandb_update_7127() {
  if (!module_exists('kandb_alias_dossier_article')) {
    module_enable(array('kandb_alias_dossier_article'), TRUE);
  }
}

/**
 * Enable "nodeorder" Module
 */
function kandb_update_7128() {
  if (!module_exists('weight')) {
    module_enable(array('weight'), TRUE);
  }
}

/**
 * Enable "nodeorder" Module
 */
function kandb_update_7129() {
  if (!module_exists('nodeorder')) {
    module_enable(array('nodeorder'), TRUE);
  }
}

/**
 * Enable "nodeorder" Module
 */
function kandb_update_7130() {
  if (!module_exists('kandb_dossier_weight_views')) {
    module_enable(array('kandb_dossier_weight_views'), TRUE);
  }
}


/**
 * Enable "kandb_path_alias_patterns" Module
 */
function kandb_update_7131() {
  if (!module_exists('kandb_path_alias_patterns')) {
    module_enable(array('kandb_path_alias_patterns'), TRUE);
  }
}

/*
 * Enable metatag module
 */
function kandb_update_7132() {
  if (!module_exists('metatag')) {
    module_enable(array('metatag'), TRUE);
  }
}

