<?php
/**
 * @file
 * Code for the K&B Selection feature.
 */

include_once 'kandb_selection.features.inc';

/**
 * Define Selection URLs
 */
define('URL_PROJET', 'mon-espace');
define('URL_PROJET_AJAX', 'mon-espace/ajax');

/**
 * Implements hook_menu().
 */
function kandb_selection_menu() {
  $menu = array();
  $menu[URL_PROJET] = array(
    'title' => 'Mon espace',
    'page callback' => 'kandb_selection_page_selection',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $menu[URL_PROJET_AJAX] = array(
    'title' => '',
    'page callback' => 'kandb_selection_ajax_selection',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $menu['admin/content/ketb/projet'] = array(
    'title' => 'Mon espace',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kandb_selection_page_admin_form'),
    'access arguments' => array('administer selection'),
    'file' => 'includes/kandb_selection.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $menu;
}

/**
 * Implements hook_permission().
 */
function kandb_selection_permission() {
  return array(
    'administer selection' => array(
      'title' => t('Administer selection'),
      'description' => t('Give the user the right to change texts and image on the "Mes sÃ©lections" page.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function kandb_selection_theme($existing, $type, $theme, $path) {
  return array(
    'page_selection' => array(
      'template' => 'templates/page_selection',
      'variables' => array(),
    ),
    'ajax_selection' => array(
      'template' => 'templates/ajax_selection',
      'variables' => array(),
    ),
    'block_recherche' => array(
      'template' => 'templates/block_recherche',
      'variables' => array(),
    ),
  );
}

/**
 * Page Callback
 */
function kandb_selection_page_selection() {
  $variables = array();
  $bg = file_load(variable_get('kandb_selection_photo'));
  $variables['backgrounds'] = array(
    'small' => image_style_url('header_small', $bg->uri),
    'medium' => image_style_url('header_large', $bg->uri),
  );
  $variables['title'] = variable_get('kandb_selection_title');
  $variables['sub_title'] = variable_get('kandb_selection_sub_title');
  $variables['ajax_url'] = '/' . URL_PROJET_AJAX;

  $block_contact = module_invoke('kandb_contact', 'block_view', 'contact_block_page');
  $variables['contact'] = $block_contact['content'];

  return theme('page_selection', $variables);
}

/**
 * Ajax Callback
 */
function kandb_selection_ajax_selection(){
  $content = array();

  // Get the Ids from the arguments
  $ids_programme = isset($_GET['programme']) ? explode(',', $_GET['programme']) : array();
  $ids_bien = isset($_GET['bien']) ? explode(',', $_GET['bien']) : array();
  $ids_avant_premiere = isset($_GET['avant_premiere']) ? explode(',', $_GET['avant_premiere']) : array();
  $ids_articles = isset($_GET['article']) ? explode(',', $_GET['article']) : array();
  $recherches = isset($_GET['recherche']) ? explode(',', $_GET['recherche']) : array();

  // Selection Programme Bien & Avant Premiere
  $content['selection_programme_bien_avant_premiere'] = call_user_func_array(
    'views_embed_view',
    array('mon_espace', 'block_1', implode('+', array_merge($ids_programme, $ids_bien, $ids_avant_premiere)))
  );

  // Selection Recherche
  // TODO : Remove when true data are provided
  $recherches_test = array('http://kandb.local/recherche?place=Alsace&field_type%5B%5D=264&field_type%5B%5D=168&field_type%5B%5D=244&field_type%5B%5D=205&field_type%5B%5D=238&field_type%5B%5D=83&prix_min=15&prix_max=35&field_nb_pieces%5B%5D=276&field_nb_pieces%5B%5D=362&field_nb_pieces%5B%5D=99&field_nb_pieces%5B%5D=41&field_nb_pieces%5B%5D=322&field_superficie=42&field_caracteristique%5B%5D=3938&field_caracteristique%5B%5D=157&field_caracteristique%5B%5D=385&field_caracteristique%5B%5D=307&field_caracteristique%5B%5D=152&field_caracteristique%5B%5D=279&field_caracteristique%5B%5D=260&field_caracteristique%5B%5D=132&field_caracteristique%5B%5D=40&field_caracteristique%5B%5D=272&field_caracteristique%5B%5D=59&field_caracteristique%5B%5D=240&field_caracteristique%5B%5D=7&field_caracteristique%5B%5D=228&field_caracteristique%5B%5D=305&field_caracteristique%5B%5D=195&programme=1&op=Rechercher');
  $recherches = kandb_selection_order_search_informations($recherches_test);
  $content['recherche'] = theme('block_recherche', $recherches);

  // Selection Articles
  $content['selection_article'] = call_user_func_array(
    'views_embed_view',
    array_merge(
      array('mon_espace', 'block_2'), $ids_articles
    )
  );

  print theme('ajax_selection', $content);
  drupal_exit();
}

/**
 * Transform an array of search url into readable array of filter
 *
 * @param $recheches
 *  Saved researches url in the cookies
 *
 * @return array
 *  An readable array of  search
 */
function kandb_selection_order_search_informations($recherches){
  global $base_url;

  $reference = array();
  $array_of_filter = recherche_complete_b2c_form(array(), $reference);
  $return_array = array();
  $taxonomy_ids_to_retrieve = array();

  // First loop to get ids of data to retrieve
  foreach($recherches as $id => $recherche) {

    // Remove first part of the url
    $recherche = str_replace($base_url, '', $recherche);
    $recherche = str_replace('/' . URL_SEARCH_B2C . '?', '', $recherche);
    $recherche = urldecode($recherche);
    $recherche = explode('&', $recherche);


    // Get all ids from taxonomy filter
    foreach($recherche as $filter){
      $filter = str_replace('[]', '', $filter);
      $filter = explode('=', $filter);

      // Avoid all filter that doesn't actually exists
      if(!isset($array_of_filter[$filter[0]])) continue;

      // Get taxonomy id to retrieve it
      if(isset($array_of_filter[$filter[0]]['#taxonomy']) && $array_of_filter[$filter[0]]['#taxonomy']) $taxonomy_ids_to_retrieve[] = $filter[1];
    }
  }

  $taxonomy_ids = array();
  if(!empty($taxonomy_ids_to_retrieve)) {
    $taxonomy_ids = taxonomy_term_load_multiple($taxonomy_ids_to_retrieve);
  }

  // Second loop to prepare the data for the template
  foreach($recherches as $id => $recherche) {

    // Remove first part of the url
    $recherche = str_replace($base_url, '', $recherche);
    $recherche = str_replace('/' . URL_SEARCH_B2C . '?', '', $recherche);
    $recherche = urldecode($recherche);
    $recherche = explode('&', $recherche);

    // First loop to clean and get all id to retrieve external data
    foreach($recherche as $filter){
      $filter = str_replace('[]', '', $filter);
      $filter = explode('=', $filter);

      // Avoid all filter that doesn't actually exists
      if(!isset($array_of_filter[$filter[0]])) continue;

      // Organize data in the array
      if(!isset($return_array[$filter[0]])) $return_array[$filter[0]] = array();
      if(isset($array_of_filter[$filter[0]]['#taxonomy']) && $array_of_filter[$filter[0]]['#taxonomy']) $filter[1] = $taxonomy_ids[$filter[1]]->name;
      $return_array[$filter[0]][] = $filter[1];
    }
  }

  return $return_array;
}