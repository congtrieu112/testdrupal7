<?php

/**
 * Implements hook_menu().
 */
function kb_import_menu() {
  $items = array();

  $items['delete-nodes'] = array(
    'title' => 'Import',
    'page callback' => 'action_delete_nodes',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  $items['admin/config/kb-import'] = array(
    'title' => 'Kandb import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('config_ftp_page'),
    'file' => 'kb_import.admin.inc',
    'access callback' => TRUE,
  );
  $items['admin/config/kb-import/ftp-files'] = array(
    'title' => 'Configure ftp to get files',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

function action_delete_nodes() {
  $KBAPI = new KAndBAPI();
  $results = $KBAPI->getListNodeByBundle('node', 'bien');

  foreach ($results as $id => $value) {
    $nids[] = $id;
  }

  if (!empty($nids)) {
    node_delete_multiple($nids);
    drupal_set_message(t('Deleted %count nodes.', array('%count' => count($nids))));
  }
}

/**
 * Implements hook_cronapi
 * @param type $op
 * @param type $job
 * @return string
 */
function kb_import_cronapi($op, $job = NULL) {
//Starting daily import 
  $items['kandb_starting_daily_import'] = array(
    'description' => 'Starting daily import',
    'rule' => '0 3 * * 1-5',
    'callback' => 'kb_starting_daily_import' ,
  );

  return $items;
}

function kb_import_feeds_after_import($source) {
$kb_daily_import_importers = array(
  'city_feed_import',
  'district_feed_import',
  'maison_feed_import',
  'programme_feed_import',
  'parcel_feed_import',
);
  $id = $source->id;
  $status = 0;
  $kb_daily_import_status = get_daily_import_status ();
  if (in_array($id, $kb_daily_import_importers) && isset($kb_daily_import_status['start_daily_import']) && $kb_daily_import_status['start_daily_import'] == 1) {
//Set status value
    if (isset($source->exception) || !_check_successful_importer($source)) {
      $status = -1;
    }
    else {
      $status = 1;
    }
    $kb_daily_import_status[$id . '_status'] = $status;
    set_daily_import_status($kb_daily_import_status);
//Call event daily_import_importer_finish
    rules_invoke_event('daily_import_importer_finish', $id);
  }
}
function kb_starting_daily_import(){
  module_load_include('inc', 'kb_import', 'kb_import.GettingFiles');
  $start_getting_file = kb_import_ftp_get_files();
  if($start_getting_file) {
  //Set variable's status
    $kb_daily_import_status = daily_import_status_default();
    $kb_daily_import_status['start_daily_import'] = 1;
    set_daily_import_status ($kb_daily_import_status);
  //Call event starting_daily_import
    rules_invoke_event('starting_daily_import');
  }
}

function kb_daily_import_importer_list() {
  $all_daily_importer = array(
    'city_feed_import',
    'district_feed_import',
    'maison_feed_import',
    'programme_feed_import',
    'parcel_feed_import',
  );
  $importer_ops = array();
  $importers = feeds_importer_load_all(TRUE);
  foreach($importers as $k => $importer){
    if(in_array($k, $all_daily_importer)){
      $name = $importer->config['name'];
      $importer_ops[$k] = $name;
    }
  }
  return $importer_ops;
}
function get_daily_import_status () {
  return variable_get('kb_daily_import_status', daily_import_status_default());
}
function set_daily_import_status ($kb_daily_import_status) {
  variable_set('kb_daily_import_status', $kb_daily_import_status);
}
function daily_import_status_default() {
  $kb_daily_import_status = array(
    'start_daily_import' => 0,
    'city_feed_import_status' => 0,
    'district_feed_import_status' => 0,
    'maison_feed_import_status' => 0,
    'programme_feed_import_status' => 0,
    'parcel_feed_import_status' => 0,
  );
  return $kb_daily_import_status;
}
function _check_successful_importer ($feeds_source) {
  $status = FALSE;
  if (isset($feeds_source->state['parse']->total) && $feeds_source->state['parse']->total > 0) {
    if ($feeds_source->state['parse']->progress == 1 && $feeds_source->state['process']->progress == 1 && $feeds_source->state['fetch']->progress == 1) {
      $status = TRUE;
    }
  }
  return $status;
}
function kb_daily_import_logging ($message) {
  if(module_exists('kandb_feed') && $message != ''){
    $uri = 'private://daily-import-log/';
    $file_log_name = 'daily_import_log_' . date('Y-m-d') . '.txt';
    createFileErrorLogTxt($file_log_name, $message, $uri);
  }
}