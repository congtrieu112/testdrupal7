<?php

/**
 * @file
 * K&B B2C Group pages Activities.
 */
define('BLOC_BUREAU_KPI_ITEMS_NUM', 20);
define('KANDB_GROUP_ACTIVITES_HEADER_MENU_DEFAULT_TITLES', serialize(array(t('Habitat'), t('Tertiaire'), t('Nos agences'))));
define('KANDB_GROUP_ACTIVITES_HEADER_MENU_DEFAULT_LINKS', serialize(array('corporate/activites/habitat', 'corporate/activites/tertiaire', 'corporate/activites/nos-agences')));
define('NUMBER_CTA_ACTIVE', 3);
define('VOCAL_HABITAT', 'type_de_habitat');

/**
 * Implement of hook_menu().
 */
function kandb_activities_menu() {
  $items = array();

  $items['corporate/activites/habitat'] = array(
    'title' => 'Le Groupe - Activités - Habitat',
    'page callback' => 'render_group_activities_habitat',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['corporate/activites/tertiaire'] = array(
    'title' => 'Le Groupe - Activités - Habitat',
    'page callback' => 'render_group_activities_tertiaire',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['corporate/activites/nos-agences'] = array(
    'title' => 'Le Groupe - Activités - Nos agences',
    'page callback' => 'render_group_activities_nos_agences',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  $items['corporate/activites/nos-services'] = array(
    'title' => 'Le Groupe - Activités - Nos agences',
    'page callback' => 'render_group_activities_nos_agences',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  $items['corporate/activites/nos-showroom'] = array(
    'title' => 'Le Groupe - Activités - Nos agences',
    'page callback' => 'render_group_activities_nos_agences',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  $items['admin/content/ketb/group/active/habitat'] = array(
    'title' => '[Activities] - Habitat',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kandb_group_active_habitat_form'),
    'file' => 'kandb_group_active_habitat.admin.inc',
    'access arguments' => array('administer K&B group page'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/content/ketb/group/active/tertiaire'] = array(
    'title' => '[Activities] - Tertiaire',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kandb_group_active_tertiaire_form'),
    'file' => 'kandb_group_active_tertiaire.admin.inc',
    'access arguments' => array('administer K&B group page'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['corporate/activites/habitat/%'] = array(
    'title' => 'Le Groupe - Activités - Habitat',
    'page callback' => 'render_group_activities_habitat_by_term',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['admin/content/ketb/group/active/agences'] = array(
    'title' => '[Activities] - Nos - agences - service - showroom',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kandb_group_active_agences_form'),
    'file' => 'kandb_group_active_agences.admin.inc',
    'access arguments' => array('administer K&B group page'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implement of hook_theme().
 */
function kandb_activities_theme($existing, $type, $theme, $path) {
  return array(
    'group_activities_header' => array(
      'template' => 'templates/group_active_header',
      'variables' => array(),
    ),
    'group_activities_habitat' => array(
      'template' => 'templates/group_active_habitat',
      'variables' => array(),
    ),
    'group_activities_tertiaire' => array(
      'template' => 'templates/group_active_tertiaire',
      'variables' => array(),
    ),
    'group_activities_nos_agences' => array(
      'template' => 'templates/group_activities_nos_agences',
      'variables' => array(),
    ),
    'group_activities_nos_agences_sub' => array(
      'template' => 'templates/group_activities_nos_agences_sub',
      'variables' => array(),
    ),
  );
}

/**
 * Implements render page habitat.
 */
function render_group_activities_habitat() {
  $data = array();
  if ($vocabulary = taxonomy_vocabulary_machine_name_load(VOCAL_HABITAT)) {
    $tree = taxonomy_get_tree($vocabulary->vid);
    if ($tree) {
      $data['type'] = $tree;
      if (isset($tree[0]->tid)) {
        $nodes = kandb_activities_get_habitat_node($tree[0]->tid);
        $data['nodes'] = $nodes;
        $data['active'] = $tree[0]->tid;
        $data['term_name'] = $tree[0]->name;
      }
    }
  }
  return theme('group_activities_habitat', array('data' => $data));
}

/**
 * Implements render page habitat.
 */
function render_group_activities_tertiaire() {
  $data = array();
  return theme('group_activities_tertiaire', array('data' => $data));
}

/**
 * Implements render page Nos agences.
 */
function render_group_activities_nos_agences() {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'region_kb')
    ->propertyCondition('status', 1)
      ->fieldOrderBy('field_region_kb_id', 'value', 'ASC');
  $regions = $query->execute();

  return theme('group_activities_nos_agences', array('region_contents' => $regions));
}

/**
 * Implement render habitat with term id.
 */
function render_group_activities_habitat_by_term($tid) {
  $data = array();
  if ($vocabulary = taxonomy_vocabulary_machine_name_load(VOCAL_HABITAT)) {
    $tree = taxonomy_get_tree($vocabulary->vid);
    if ($tree) {
      $data['type'] = $tree;
      if ($tid) {
        $nodes = kandb_activities_get_habitat_node($tid);
        $data['nodes'] = $nodes;
        $data['active'] = $tid;
        $tax_type = taxonomy_term_load($tid);
        $data['term_name'] = isset($tax_type->name) ? $tax_type->name : '';
      }
    }
  }
  return theme('group_activities_habitat', array('data' => $data));
}

/**
 * Get grouvernance lasted.
 */
function kandb_activities_get_habitat_node($tid = array()) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'habitat')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_habitat_type', 'tid', $tid, '=')
    ->propertyOrderBy('changed', 'DESC')
  ;
  $result = $query->execute();

  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    return entity_load('node', $nids);
  }

  return NULL;
}

/**
 * Implement hook_form_alter
 */
function kandb_activities_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id):
    case 'habitat_node_form';
      $form['title']['#required'] = FALSE;
      $form['title']['#disabled'] = TRUE;
      $form['title']['#description'] = t('Title will be Code Potal + Ville by automatically after save');
      $form['#validate'][] = 'kandb_activities_habitat_validate';
      break;
    // region_kb_node_form
    case 'region_kb_node_form':
      $form['#validate'][] = 'kandb_activities_region_node_validate';
      $form['#validate'][] = 'kandb_activities_region_validate';
      break;
    case 'programme_node_form':
      $form['#validate'][] = 'kandb_activities_programme_validate';
      break;
    case 'kandb_contact_admin':
      $form['#validate'][] = 'kandb_activities_contact_admin_validate';
      break;
    default:

  endswitch;
}

/**
 * Implement hook_form_validate().
 */
function kandb_activities_region_node_validate(&$form, &$form_state) {
 $config_phone_regex = '/^((((\+)[0-9]{11}))|([0-9]{10}))$/';
 $config_error_phone = t('Phone number must be in format +xxxxxxxxxxx or xxxxxxxxxx');
 // field_region_kb_telephone
 $field_region_kb_telephone = $form_state['values']['field_region_kb_telephone'][LANGUAGE_NONE][0]['value'];
 if ($field_region_kb_telephone != null && !preg_match($config_phone_regex, $field_region_kb_telephone)) {
     form_set_error('field_region_kb_telephone', t($config_error_phone));
  }
 // Adresse 1
 $field_kb_agence1_telephone = $form_state['values']['field_kb_agence1_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_agence1_email = $form_state['values']['field_kb_agence1_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_agence1_email != null && !valid_email_address($field_kb_agence1_email)) {
    form_set_error('field_kb_agence1_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_agence1_telephone != null && !preg_match($config_phone_regex, $field_kb_agence1_telephone)) {
     form_set_error('field_kb_agence1_telephone', $config_error_phone);
  }
 // Adresse 2
 $field_kb_agence2_telephone = $form_state['values']['field_kb_agence2_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_agence2_email = $form_state['values']['field_kb_agence2_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_agence2_email != null && !valid_email_address($field_kb_agence2_email)) {
    form_set_error('field_kb_agence2_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_agence2_telephone != null && !preg_match($config_phone_regex, $field_kb_agence2_telephone)) {
     form_set_error('field_kb_agence2_telephone', $config_error_phone);
  }
 // Adresse 3
 $field_t_l_phone = $form_state['values']['field_t_l_phone'][LANGUAGE_NONE][0]['value'];
 $field_kb_agence3_email = $form_state['values']['field_kb_agence3_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_agence3_email != null && !valid_email_address($field_kb_agence3_email)) {
    form_set_error('field_kb_agence3_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_t_l_phone != null && !preg_match($config_phone_regex, $field_t_l_phone)) {
     form_set_error('field_t_l_phone', $config_error_phone);
  }
 // Adresse 4
 $field_kb_agence4_telephone = $form_state['values']['field_kb_agence4_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_agence4_email = $form_state['values']['field_kb_agence4_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_agence4_email != null && !valid_email_address($field_kb_agence4_email)) {
    form_set_error('field_kb_agence4_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_agence4_telephone != null && !preg_match($config_phone_regex, $field_kb_agence4_telephone)) {
     form_set_error('field_kb_agence4_telephone', $config_error_phone);
  }
 // Adresse 5
 $field_kb_agence5_telephone = $form_state['values']['field_kb_agence5_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_agence5_email = $form_state['values']['field_kb_agence5_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_agence5_email != null && !valid_email_address($field_kb_agence5_email)) {
    form_set_error('field_kb_agence5_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_agence5_telephone != null && !preg_match($config_phone_regex, $field_kb_agence5_telephone)) {
     form_set_error('field_kb_agence5_telephone', $config_error_phone);
  }
 // Service 1
 $field_kb_service1_telephone = $form_state['values']['field_kb_service1_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_service1_email = $form_state['values']['field_kb_service1_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_service1_email != null && !valid_email_address($field_kb_service1_email)) {
    form_set_error('field_kb_service1_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_service1_telephone != null && !preg_match($config_phone_regex, $field_kb_service1_telephone)) {
     form_set_error('field_kb_service1_telephone', $config_error_phone);
  }
 // Service 2
 $field_kb_service2_telephone = $form_state['values']['field_kb_service2_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_service2_email = $form_state['values']['field_kb_service2_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_service2_email != null && !valid_email_address($field_kb_service2_email)) {
    form_set_error('field_kb_service2_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_service2_telephone != null && !preg_match($config_phone_regex, $field_kb_service2_telephone)) {
     form_set_error('field_kb_service2_telephone', $config_error_phone);
  }
 // Service 3
 $field_kb_service3_telephone = $form_state['values']['field_kb_service3_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_service3_email = $form_state['values']['field_kb_service3_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_service3_email != null && !valid_email_address($field_kb_service3_email)) {
    form_set_error('field_kb_service3_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_service3_telephone != null && !preg_match($config_phone_regex, $field_kb_service3_telephone)) {
     form_set_error('field_kb_service3_telephone', $config_error_phone);
  }
 // Service 4
 $field_kb_service4_telephone = $form_state['values']['field_kb_service4_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_service4_email = $form_state['values']['field_kb_service4_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_service4_email != null && !valid_email_address($field_kb_service4_email)) {
    form_set_error('field_kb_service4_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_service4_telephone != null && !preg_match($config_phone_regex, $field_kb_service4_telephone)) {
     form_set_error('field_kb_service4_telephone', $config_error_phone);
  }
 // Service 5
 $field_kb_service5_telephone = $form_state['values']['field_kb_service5_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_service5_email = $form_state['values']['field_kb_service5_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_service5_email != null && !valid_email_address($field_kb_service5_email)) {
    form_set_error('field_kb_service5_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_service5_telephone != null && !preg_match($config_phone_regex, $field_kb_service5_telephone)) {
     form_set_error('field_kb_service5_telephone', $config_error_phone);
  }
 // Showroom 1
 $field_kb_showroom1_telephone = $form_state['values']['field_kb_showroom1_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_showroom1_email = $form_state['values']['field_kb_showroom1_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_showroom1_email != null && !valid_email_address($field_kb_showroom1_email)) {
    form_set_error('field_kb_showroom1_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_showroom1_telephone != null && !preg_match($config_phone_regex, $field_kb_showroom1_telephone)) {
     form_set_error('field_kb_showroom1_telephone', $config_error_phone);
  }
 // Showroom 2
 $field_kb_showroom2_telephone = $form_state['values']['field_kb_showroom2_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_showroom2_email = $form_state['values']['field_kb_showroom2_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_showroom2_email != null && !valid_email_address($field_kb_showroom2_email)) {
    form_set_error('field_kb_showroom2_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_showroom2_telephone != null && !preg_match($config_phone_regex, $field_kb_showroom2_telephone)) {
     form_set_error('field_kb_showroom2_telephone', $config_error_phone);
  }
 // Showroom 3
 $field_kb_showroom3_telephone = $form_state['values']['field_kb_showroom3_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_showroom3_email = $form_state['values']['field_kb_showroom3_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_showroom3_email != null && !valid_email_address($field_kb_showroom3_email)) {
    form_set_error('field_kb_showroom3_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_showroom3_telephone != null && !preg_match($config_phone_regex, $field_kb_showroom3_telephone)) {
     form_set_error('field_kb_showroom3_telephone', $config_error_phone);
  }
 // Showroom 4
 $field_kb_showroom4_telephone = $form_state['values']['field_kb_showroom4_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_showroom4_email = $form_state['values']['field_kb_showroom4_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_showroom4_email != null && !valid_email_address($field_kb_showroom4_email)) {
    form_set_error('field_kb_showroom4_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_showroom4_telephone != null && !preg_match($config_phone_regex, $field_kb_showroom4_telephone)) {
     form_set_error('field_kb_showroom4_telephone', $config_error_phone);
  }
 // Showroom 5
 $field_kb_showroom5_telephone = $form_state['values']['field_kb_showroom5_telephone'][LANGUAGE_NONE][0]['value'];
 $field_kb_showroom5_email = $form_state['values']['field_kb_showroom5_email'][LANGUAGE_NONE][0]['value'];
 if ($field_kb_showroom5_email != null && !valid_email_address($field_kb_showroom5_email)) {
    form_set_error('field_kb_showroom5_email', t('The e-mail address you specified is not valid.'));
  }
 if ($field_kb_showroom5_telephone != null && !preg_match($config_phone_regex, $field_kb_showroom5_telephone)) {
     form_set_error('field_kb_showroom5_telephone', $config_error_phone);
  }
}

/**
 * Implement hook_form_validate().
 */
function kandb_activities_region_validate(&$form, &$form_state) {
  $input = $form_state['input'];
  $vals = $form_state['values'];
  $region = trim($vals['field_region_kb_id'][LANGUAGE_NONE][0]['value']);
  // Check exist region
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'region_kb')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_region_kb_id', 'value', $region, '=');

  if (isset($form['nid']['#value'])) {
      $query->propertyCondition('nid', $form['nid']['#value'], '!=');
  }

  $result = $query->execute();

  if ($result) {
      $data_exist = node_load(key($result['node']));
      form_set_error('field_region_kb_id', t('This region was be used by "'.$data_exist->title.'".'));
  }
}

/**
 * Implement hook_form_validate().
 */
function kandb_activities_habitat_validate(&$form, &$form_state) {
  $input = $form_state['input'];
  $vals = $form_state['values'];
  $tid_rigion = isset ( $input['field_habitat_region'][LANGUAGE_NONE]) ?  $input['field_habitat_region'][LANGUAGE_NONE] : '';
  $title_rigion = ($tid_rigion) ?  taxonomy_term_load($tid_rigion)->name : "";

  $code_postal = trim($input['field_habitat_code_postal'][LANGUAGE_NONE][0]['value']);
  if (strlen($code_postal) > 6 && !is_int($code_postal)) {
    form_set_error('field_habitat_code_postal', t('The code postal shoul be 4 or 5 character and must be numeric'));
  } else {
    $ville = taxonomy_term_load($vals['field_habitat_ville'][LANGUAGE_NONE][0]['tid']);
    $form_state['values']['title'] = $code_postal . ' ' . $title_rigion;
  }
}

/**
 * Alter image Title for field_top_image instance.
 */
function kandb_activities_field_widget_form_alter(&$element, &$form_state, $context) {
  // If this is an image field type of instance 'field_image_top'
  if ($context['field']['type'] == 'image') {
    // Loop through the element children (there will always be at least one).
    foreach (element_children($element) as $key => $child) {
      // Add the new process function to the element
      $element[$key]['#process'][] = 'kandb_activities_image_field_widget_process';
    }
  }
}

/**
 * Change the title field label.
 */
function kandb_activities_image_field_widget_process($element, &$form_state, $form) {
  $element['title']['#title'] = t('Image Title');

  // Return the altered element
  return $element;
}
/**
 * Implement hook_form_validate().
 */
function kandb_activities_programme_validate(&$form, &$form_state) {
  $val = $form_state['values'];
  $config_phone_regex = '/^((((\+)[0-9]{11}))|([0-9]{10}))$/';
  $config_error_phone = t('!name must be in format +xxxxxxxxxxx or xxxxxxxxxx');
  // field_espace_vente_tel
  $field_espace_vente_tel = $val['field_espace_vente_tel'][LANGUAGE_NONE][0]['value'];
  if ($field_espace_vente_tel != null && !preg_match($config_phone_regex, $field_espace_vente_tel)) {
    form_set_error('field_espace_vente_tel', t($config_error_phone, array('!name' => $form['field_espace_vente_tel']['und']['#title'])));
  }
  //field_espace_vente_tel2
  $field_espace_vente_tel2 = $val['field_espace_vente_tel2'][LANGUAGE_NONE][0]['value'];
  if ($field_espace_vente_tel2 != null && !preg_match($config_phone_regex, $field_espace_vente_tel2)) {
    form_set_error('field_espace_vente_tel2', t($config_error_phone, array('!name' => $form['field_espace_vente_tel2']['und']['#title'])));
  }
  //field_espace_vente_email
  $field_espace_vente_email = $val['field_espace_vente_email'][LANGUAGE_NONE][0]['value'];
  if ($field_espace_vente_email != null && !valid_email_address($field_espace_vente_email)) {
    form_set_error('field_espace_vente_email', t('The e-mail address you specified is not valid.'));
  }
}

/**
 * Implement hook_form_validate().
 */
function kandb_activities_contact_admin_validate(&$form, &$form_state) {
  $val = $form_state['values'];
  $config_phone_regex = '/^((((\+)[0-9]{11}))|([0-9]{10}))$/';
  $config_error_phone = t('!name must be in format +xxxxxxxxxxx or xxxxxxxxxx');
  // field_espace_vente_tel
  $kandb_contact_numéro_vert = $val['kandb_contact_numéro_vert'];
  if ($kandb_contact_numéro_vert != null && !preg_match($config_phone_regex, $kandb_contact_numéro_vert)) {
    form_set_error('kandb_contact_numéro_vert', t($config_error_phone, array('!name' => $form['kandb_contact_numéro_vert']['#title'])));
  }
}
