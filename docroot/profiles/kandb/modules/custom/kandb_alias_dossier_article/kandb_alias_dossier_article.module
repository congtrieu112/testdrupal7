<?php

/**
 * hook formsubmit dossier form
 * @param array $form
 * @param type $form_state
 */
function kandb_alias_dossier_article_form_dossier_node_form_alter(&$form, &$form_state) {
  $form['#submit'][] = 'kandb_alias_dossier_article_set_alias_submit';
}

/**
 * acion submit
 * @param type $form
 * @param type $form_state
 * @return type
 */

function kandb_alias_dossier_article_set_alias_submit($form, &$form_state) {
  $old_path_dossier = (isset($form_state["values"]["path"]["original"]["alias"])) ? $form_state["values"]["path"]["original"]["alias"] : '';
  $path_dossier = $form_state["values"]["path"]["alias"];
  
  /*if (!$path_dossier || !$old_path_dossier) {
    return;
  }*/
  $array_block_article = array('field_articles_block1_ref', 'field_articles_block2_ref', 'field_articles_block3_ref');
  foreach ($array_block_article as $block) {    
    //set alias for block 1
    if (isset($form[$block]['und']) && count($form[$block]['und'])) {
      $array_article = $form[$block]['und'];
      foreach ($array_article as $index => $article) {
        // if numeric --> is article id
        if (isset($article['target_id']['#entity']->$block)) {
          $entity_block = $article['target_id']['#entity']->$block;
          if (is_numeric($index)) {
            if (isset($entity_block['und'][$index]['target_id']))
              $id_article = $entity_block['und'][$index]['target_id'];
           if ($id_article) {
              kandb_alias_dossier_article_set_alias_for_article($path_dossier, $old_path_dossier, $id_article);
           }
          }
        }
      }
    }
  }
}

/**
 * function check and set alias
 * @param type $path_dossier
 * @param type $old_path_dossier
 * @param type $id_article
 */
// set alias for each article with doessier title
function kandb_alias_dossier_article_set_alias_for_article($path_dossier, $old_path_dossier, $id_article) {  
  // get alias of this id article
  $query = db_select('url_alias', 'n')
      ->fields('n', array('alias'))
      ->condition('source', 'node/' . $id_article);
  $alias = $query->execute()->fetchCol();
  
  if (count($alias)) {
    $new_alias = $path_dossier . '/';
    $old_alias = $old_path_dossier . '/';
    $alias = explode("/", $alias[0]);
    $path_article = $alias[1];
    $new_alias .= $path_article;
    $old_alias .= $path_article;
      
    //check if it has old alias, so we delete the old alias
    if (strcmp($new_alias, $old_alias)) {
      $query = db_select('url_alias', 'n')
          ->fields('n', array('pid'))
          ->condition('alias', $old_alias);
      $exist_old_alias = $query->execute()->fetchCol();
      if (count($exist_old_alias))
        path_delete($exist_old_alias[0]);
    }
    //check if exists this new alias
    $query = db_select('url_alias', 'n')
        ->fields('n', array('alias'))
        ->condition('alias', $new_alias);
    $exist_alias = $query->execute()->fetchCol();
    
    if (!count($exist_alias)) {
      $path = array('source' => "node/$id_article", 'alias' => $new_alias);
      path_save($path);
    }
  }
}

/**
 * Implements hook_menu().
 */
function kandb_alias_dossier_article_menu() {
    
    $items['nos-conseils'] = array(
      'page callback' => 'get_nos_conseils_page',
      //'page arguments' => array(1),
          'access callback' => TRUE,
      //'access arguments' => array('access content'),  // rights for users
      'type' => MENU_CALLBACK,
      'weight' => -7
    );

    return $items;
}

/**
 * To redirect path nos-conseils to first item of node dossier
 */
function get_nos_conseils_page(){
  $dossier = get_first_node_dossier();
  if(!empty($dossier)){
    $url = url("node/" . $dossier->nid);
    drupal_goto($url, array('external' => TRUE));
  }else{
    drupal_not_found();
    drupal_exit();
  }
}

/**
 * @todo To get first node dossier
 * @return type
 */
function get_first_node_dossier(){
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'dossier')
      ->addTag('sort_by_weight')
      ->range(0, 1)
  ;
  
  $result = $query->execute();
  if(!empty($result)){
    return array_shift($result["node"]);
  }
  return array();
}

function kandb_alias_dossier_article_query_sort_by_weight_alter(QueryAlterableInterface $query) {
  $query->join('weight_weights', 'w', 'node.nid = w.entity_id');
  $query->fields('w', array('weight'));
  $query->orderBy('w.weight', 'ASC');
}

function kandb_alias_dossier_article_node_update ($node) {
  if ($node->type != 'article') {
    return;
  }
  $related_nodes = array();
  if (isset($node->field_article_article_ref[LANGUAGE_NONE])) {
    foreach ($node->field_article_article_ref[LANGUAGE_NONE] as $related) {
      $related_nodes[] = $related['target_id'];
    }
  }
  if (empty($related_nodes)) {
    return;
  }
  $path_alias = get_path_alias_dossier_of_article($node->nid);
  if ($path_alias) {
    foreach ($path_alias as $path) {
      foreach ($related_nodes as $nid) {
        kandb_alias_dossier_article_set_alias_for_article($path, $path, $nid);
      }
    }
  }
}

function get_path_alias_dossier_of_article($article_id = 0) {
  $dossier = array();
  $path_source = array();
  $path_alias = array();
  $db_query = db_select('node', 'n');
  $db_query->fields('n', array('nid'));
  $db_query->leftJoin('field_data_field_articles_block1_ref', 'block1_ref', 'block1_ref.entity_id=n.nid');
  $db_query->leftJoin('field_data_field_articles_block2_ref', 'block2_ref', 'block2_ref.entity_id=n.nid');
  $db_query->leftJoin('field_data_field_articles_block3_ref', 'block3_ref', 'block3_ref.entity_id=n.nid');
  $db_or = db_or();
    $db_and = db_and();
    $db_and->condition('block1_ref.field_articles_block1_ref_target_id', $article_id);
    $db_and->condition('block1_ref.entity_type', 'node');
    $db_and->condition('block1_ref.bundle', 'dossier');
  $db_or->condition($db_and);
    $db_and = db_and();
    $db_and->condition('block2_ref.field_articles_block2_ref_target_id', $article_id);
    $db_and->condition('block2_ref.entity_type', 'node');
    $db_and->condition('block2_ref.bundle', 'dossier');
  $db_or->condition($db_and);
    $db_and = db_and();
    $db_and->condition('block3_ref.field_articles_block3_ref_target_id', $article_id);
    $db_and->condition('block3_ref.entity_type', 'node');
    $db_and->condition('block3_ref.bundle', 'dossier');
  $db_or->condition($db_and);
  $db_query->condition($db_or);
  $dossier = $db_query->distinct()->execute()->fetchCol();
  foreach ($dossier as $nid) {
    $path_source[] = 'node/' . $nid;
  }
  if ($path_source) {
    $db_query_alias = db_select('url_alias', 'als');
    $db_query_alias->fields('als', array('alias'));
    $db_query_alias->condition('als.source', $path_source, 'IN');
    $path_alias = $db_query_alias->distinct()->execute()->fetchCol();
  }
  return $path_alias;
}