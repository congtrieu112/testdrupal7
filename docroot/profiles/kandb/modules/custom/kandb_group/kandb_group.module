<?php

/**
 * @file
 * K&B B2C Group pages.
 */
define('TYPE_DOCUMENT', 'CommuniquÃ© de presse');
define('VOCAL_DOCUMENT', 'type_de_document');
define('LIMIT_DOCUMENT', 3);
define('NUMBER_CTA_GROUP', 6);

/**
 * Implement of hook_menu().
 */
function kandb_group_menu() {
  $items = array();

  $items['group/home'] = array(
    'title' => 'B2B Homepage',
    'page callback' => 'render_group_homepage',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  $items['admin/content/ketb/finance/presentation'] = array(
    'title' => '[Finance] Presentation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kandb_group_finance_presentation_admin_form'),
    'file' => 'kandb_group.admin.inc',
    'access arguments' => array('administer K&B Contact settings'),
    'type' => MENU_LOCAL_TASK,
  );
  
  $items['finance/presentation/%'] = array(
    'title' => 'Finance - Presentation',
    'page callback' => 'render_finance_presentation_page',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/content/ketb/group/home'] = array(
    'title' => '[Group] Home',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kandb_group_home_admin_form'),
    'file' => 'kandb_group_home.admin.inc',
    'access arguments' => array('administer K&B Contact settings'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implement of hook_theme().
 */
function kandb_group_theme($existing, $type, $theme, $path) {
  return array(
    'group_homepage' => array(
      'template' => 'templates/group_homepage',
      'variables' => array(),
    ),
    'finance_presentation_page' => array(
      'template' => 'templates/finance_presentation_page',
      'variables' => array(),
    ),
  );
}

function render_group_homepage() {
  $data = array();
  $term_document_id = kandb_group_get_term_from_name(TYPE_DOCUMENT, VOCAL_DOCUMENT);
  if ($term_document_id) {
    $documents = kandb_group_get_document_node(LIMIT_DOCUMENT, $term_document_id);
    if ($documents) {
      $data['documents'] = $documents;
    }
  }
  $group_header = module_invoke('bean', 'block_view', 'group-header');
  if (isset($group_header['content']) && $group_header['content']) {
    $data['group_header'] = $group_header['content'];
  }
  // Block Finance.
  $finance_img = variable_get('image_group_home_block_finance', 0);
  $finace_img_load = file_load($finance_img);
  $finace_img_uri = (isset($finace_img_load->uri)) ? file_create_url($finace_img_load->uri) : '';
  $data['finance_block']['image'] = $finace_img_uri;
  $finace_title = variable_get('title_group_home_block_finance');
  $data['finance_block']['title'] = $finace_title;
  $number_cta = NUMBER_CTA_GROUP;
  for ($i = 0; $i < $number_cta; $i++) {
    $url = $title = '';
    $cta = array();
    $cta = variable_get('cta_group_home_block_finance_' . $i);
    if (isset($cta['url']) && isset($cta['title']) && $cta['title'] && $cta['url']) {
      $data['finance_block']['cta'][] = array('url' => $cta['url'], 'title' => $cta['title']);
    }
  }
  return theme('group_homepage', array('data' => $data));
}

/**
 * Render finance presentation page.
 */
function render_finance_presentation_page() {
  return theme('finance_presentation_page', array());
}

/**
 * Get document lasted.
 */
function kandb_group_get_document_node($limit, $tid) {

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'document')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_document_type', 'tid', $tid)
    ->fieldOrderBy('field_document_date', 'value', 'DESC')
    ->propertyOrderBy('changed', 'DESC')
    ->range(0, $limit)
  ;
  $result = $query->execute();

  if (isset($result['node'])) {
    $promotion_nids = array_keys($result['node']);
    return entity_load('node', $promotion_nids);
  }

  return NULL;
}

/**
 * Helper function to dynamically get the tid from the term_name.
 */
function kandb_group_get_term_from_name($term_name, $vocabulary_name) {
  if ($vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name)) {
    $tree = taxonomy_get_tree($vocabulary->vid);
    foreach ($tree as $term) {
      if ($term->name == $term_name) {
        return $term->tid;
      }
    }
  }
  return FALSE;
}
